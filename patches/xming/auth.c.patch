--- ./os/save_auth.c	2019-07-24 01:21:41.154018802 +0100
+++ ./os/auth.c	2019-07-24 01:24:15.420180990 +0100
@@ -202,11 +202,11 @@
          */
 
         if (loadauth > 0) {
-            DisableLocalAccess(); /* got at least one */
+            DisableLocalHost(); /* got at least one */
             loaded = TRUE;
         }
         else if (loadauth == 0 || !loaded)
-            EnableLocalAccess();
+            EnableLocalHost();
     }
     if (name_length) {
         for (i = 0; i < NUM_AUTHORIZATION; i++) {
@@ -308,6 +308,44 @@
     return -1;
 }
 
+#ifdef __MINGW32__              /* Xming */
+
+/* A random number generator that is more unpredictable
+   than that shipped with some systems.
+   This code is taken from the C standard. */
+
+static unsigned long int next = 1;
+
+static int
+xdm_rand(void)
+{
+    next = next * 1103515245 + 12345;
+    return (unsigned int) (next / 65536) % 32768;
+}
+
+static void
+xdm_srand(unsigned int seed)
+{
+    next = seed;
+}
+
+void
+GenerateRandomData(int len, char *buf)
+{
+    static int seed;
+    int value;
+    int i;
+
+    seed += GetTimeInMillis();
+    xdm_srand(seed);
+    for (i = 0; i < len; i++) {
+        value = xdm_rand();
+        buf[i] ^= (value & 0xff00) >> 8;
+    }
+}
+
+#else                           /* not Xming */
+
 void
 GenerateRandomData(int len, char *buf)
 {
@@ -322,4 +360,5 @@
 #endif
 }
 
+#endif
 #endif                          /* XCSECURITY */
