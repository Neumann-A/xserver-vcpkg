--- ./dix/save_events.c	2021-02-17 04:56:49.797799252 +0000
+++ ./dix/events.c	2021-02-17 04:59:10.768077977 +0000
@@ -683,15 +683,15 @@
         x += incx;
         if (x >= box.x2) {
             incx = -1;
-            x = *px - 1;
+            x = min(box.x2, *px) - 1;
         }
         else if (x < box.x1) {
             incx = 1;
-            x = *px;
+            x = max(box.x1, *px);
             y += incy;
             if (y >= box.y2) {
                 incy = -1;
-                y = *py - 1;
+                y = min(box.y2, *py) - 1;
             }
             else if (y < box.y1)
                 return;         /* should never get here! */
@@ -2028,8 +2028,10 @@
     }
 
     if (BitIsOn(criticalEvents, type)) {
+#ifdef HAVE_SETITIMER
         if (client->smart_priority < SMART_MAX_PRIORITY)
             client->smart_priority++;
+#endif
         SetCriticalOutputPending();
     }
 
@@ -2678,7 +2680,7 @@
     xEvent *xE = NULL;
     int count = 0;
     int deliveries = 0;
-    int rc;
+    int rc = 0;
 
     switch (level) {
     case XI2:
@@ -3803,10 +3805,10 @@
 MatchForType(const GrabPtr grab, GrabPtr tmp, enum InputLevel level,
              int event_type)
 {
-    enum MatchFlags match;
+    enum MatchFlags match = NO_MATCH;
     BOOL ignore_device = FALSE;
-    int grabtype;
-    int evtype;
+    int grabtype = 0;
+    int evtype = 0;
 
     switch (level) {
     case XI2:
