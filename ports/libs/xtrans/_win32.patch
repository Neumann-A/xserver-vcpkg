diff --git a/Xtrans.c b/Xtrans.c
index 0e09b25bd..e1e90132d 100644
--- a/Xtrans.c
+++ b/Xtrans.c
@@ -118,7 +118,7 @@ Xtransport_table Xtransports[] = {
 #define NUMTRANS	(sizeof(Xtransports)/sizeof(Xtransport_table))
 
 
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 #define ioctl ioctlsocket
 #endif
 
@@ -409,7 +409,7 @@ TRANS(Open) (int type, const char *address)
 
     prmsg (2,"Open(%d,%s)\n", type, address);
 
-#if defined(WIN32) && defined(TCPCONN)
+#if (defined(WIN32) || defined(_WIN32)) && defined(TCPCONN)
     if (TRANS(WSAStartup)())
     {
 	prmsg (1,"Open: WSAStartup failed\n");
@@ -658,9 +658,9 @@ TRANS(SetOption) (XtransConnInfo ciptr, int option, int arg)
 	    ret = ioctl (fd, FIOSNBIO, &arg);
 	}
 #else
-#if defined(WIN32)
+#if defined(WIN32) || defined(_WIN32)
 	{
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 	    u_long arg;
 #else
 	    int arg;
@@ -1256,7 +1256,7 @@ TRANS(MakeAllCOTSServerListeners) (const char *port, int *partial,
  */
 
 
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 
 /*
  * emulate readv
diff --git a/Xtrans.h b/Xtrans.h
index 360b01ba8..abd13de6d 100644
--- a/Xtrans.h
+++ b/Xtrans.h
@@ -54,7 +54,7 @@ from The Open Group.
 #include <X11/Xos.h>
 #include <X11/Xmd.h>
 
-#ifndef WIN32
+#if !(defined(WIN32) || defined(_WIN32))
 #include <sys/socket.h>
 #endif
 
@@ -148,7 +148,7 @@ typedef long BytesReadable_t;
 #endif
 
 
-#if defined(WIN32) || defined(USG)
+#if defined(WIN32) || defined(_WIN32) || defined(USG)
 
 /*
  *      TRANS(Readv) and TRANS(Writev) use struct iovec, normally found
@@ -409,7 +409,7 @@ TRANS(GetHostname) (
     int 	/* maxlen */
 );
 
-#if defined(WIN32) && defined(TCPCONN)
+#if (defined(WIN32) || defined(_WIN32)) && defined(TCPCONN)
 int TRANS(WSAStartup)();
 #endif
 
diff --git a/Xtransint.h b/Xtransint.h
index 2156bd52f..735b54301 100644
--- a/Xtransint.h
+++ b/Xtransint.h
@@ -72,7 +72,7 @@ from The Open Group.
 #  define XTRANSDEBUG 1
 #endif
 
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 # define _WILLWINSOCK_
 #endif
 
@@ -88,7 +88,7 @@ from The Open Group.
 
 #include <errno.h>
 
-#ifndef WIN32
+#if !(defined(WIN32) || defined(_WIN32))
 #  include <sys/socket.h>
 # include <netinet/in.h>
 # include <arpa/inet.h>
@@ -318,7 +318,7 @@ typedef struct _Xtransport_table {
  * systems, so they may be emulated.
  */
 
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 
 #define READV(ciptr, iov, iovcnt)	TRANS(ReadV)(ciptr, iov, iovcnt)
 
@@ -335,7 +335,7 @@ static	int TRANS(ReadV)(
 #endif /* WIN32 */
 
 
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 
 #define WRITEV(ciptr, iov, iovcnt)	TRANS(WriteV)(ciptr, iov, iovcnt)
 
diff --git a/Xtranssock.c b/Xtranssock.c
index 137b20b4d..719d2764c 100644
--- a/Xtranssock.c
+++ b/Xtranssock.c
@@ -74,7 +74,7 @@ from the copyright holders.
 #include <X11/Xthreads.h>
 #endif
 
-#ifndef WIN32
+#if !(defined(WIN32) || defined(_WIN32))
 
 #if defined(TCPCONN) || defined(UNIXCONN)
 #include <sys/socket.h>
@@ -288,7 +288,7 @@ TRANS(SocketINETGetAddr) (XtransConnInfo ciptr)
     if (getsockname (ciptr->fd,(struct sockaddr *) socknamePtr,
 		     (void *)&namelen) < 0)
     {
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 	errno = WSAGetLastError();
 #endif
 	prmsg (1,"SocketINETGetAddr: getsockname() failed: %d\n",
@@ -355,7 +355,7 @@ TRANS(SocketINETGetPeerAddr) (XtransConnInfo ciptr)
     if (getpeername (ciptr->fd, (struct sockaddr *) socknamePtr,
 		     (void *)&namelen) < 0)
     {
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 	errno = WSAGetLastError();
 #endif
 	prmsg (1,"SocketINETGetPeerAddr: getpeername() failed: %d\n",
@@ -397,13 +397,13 @@ TRANS(SocketOpen) (int i, int type)
 
     if ((ciptr->fd = socket(Sockettrans2devtab[i].family, type,
 	Sockettrans2devtab[i].protocol)) < 0
-#ifndef WIN32
+#if !(defined(WIN32) || defined(_WIN32))
 #if (defined(X11_t) && !defined(USE_POLL)) || defined(FS_t) || defined(FONT_t)
        || ciptr->fd >= sysconf(_SC_OPEN_MAX)
 #endif
 #endif
       ) {
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 	errno = WSAGetLastError();
 #endif
 	prmsg (2, "SocketOpen: socket() failed for %s\n",
@@ -1150,7 +1150,7 @@ TRANS(SocketINETAccept) (XtransConnInfo ciptr, int *status)
     if ((newciptr->fd = accept (ciptr->fd,
 	(struct sockaddr *) &sockname, (void *)&namelen)) < 0)
     {
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 	errno = WSAGetLastError();
 #endif
 	prmsg (1, "SocketINETAccept: accept() failed\n");
@@ -1592,7 +1592,7 @@ TRANS(SocketINETConnect) (XtransConnInfo ciptr,
 
     if (connect (ciptr->fd, socketaddr, socketaddrlen ) < 0)
     {
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 	int olderrno = WSAGetLastError();
 #else
 	int olderrno = errno;
@@ -1972,7 +1972,7 @@ TRANS(SocketBytesReadable) (XtransConnInfo ciptr, BytesReadable_t *pend)
 {
     prmsg (2,"SocketBytesReadable(%p,%d,%p)\n",
 	ciptr, ciptr->fd, pend);
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
     {
 	int ret = ioctlsocket ((SOCKET) ciptr->fd, FIONREAD, (u_long *) pend);
 	if (ret == SOCKET_ERROR) errno = WSAGetLastError();
@@ -2096,10 +2096,10 @@ TRANS(SocketRead) (XtransConnInfo ciptr, char *buf, int size)
 {
     prmsg (2,"SocketRead(%d,%p,%d)\n", ciptr->fd, buf, size);
 
-#if defined(WIN32)
+#if defined(WIN32) || defined(_WIN32)
     {
 	int ret = recv ((SOCKET)ciptr->fd, buf, size, 0);
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 	if (ret == SOCKET_ERROR) errno = WSAGetLastError();
 #endif
 	return ret;
@@ -2236,10 +2236,10 @@ TRANS(SocketWrite) (XtransConnInfo ciptr, char *buf, int size)
 {
     prmsg (2,"SocketWrite(%d,%p,%d)\n", ciptr->fd, buf, size);
 
-#if defined(WIN32)
+#if defined(WIN32) || defined(_WIN32)
     {
 	int ret = send ((SOCKET)ciptr->fd, buf, size, 0);
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 	if (ret == SOCKET_ERROR) errno = WSAGetLastError();
 #endif
 	return ret;
@@ -2265,7 +2265,7 @@ TRANS(SocketDisconnect) (XtransConnInfo ciptr)
 {
     prmsg (2,"SocketDisconnect(%p,%d)\n", ciptr, ciptr->fd);
 
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
     {
 	int ret = shutdown (ciptr->fd, 2);
 	if (ret == SOCKET_ERROR) errno = WSAGetLastError();
@@ -2284,7 +2284,7 @@ TRANS(SocketINETClose) (XtransConnInfo ciptr)
 {
     prmsg (2,"SocketINETClose(%p,%d)\n", ciptr, ciptr->fd);
 
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
     {
 	int ret = close (ciptr->fd);
 	if (ret == SOCKET_ERROR) errno = WSAGetLastError();
diff --git a/Xtransutil.c b/Xtransutil.c
index 63f0fc355..413a02376 100644
--- a/Xtransutil.c
+++ b/Xtransutil.c
@@ -57,7 +57,7 @@ from The Open Group.
 #ifdef XTHREADS
 #include <X11/Xthreads.h>
 #endif
-#ifdef WIN32
+#if defined(WIN32) || defined(_WIN32)
 #include <X11/Xlibint.h>
 #include <X11/Xwinsock.h>
 #endif
@@ -418,7 +418,7 @@ TRANS(GetPeerNetworkId) (XtransConnInfo ciptr)
 #endif /* ICE_t */
 
 
-#if defined(WIN32) && defined(TCPCONN)
+#if (defined(WIN32) || defined(_WIN32)) && defined(TCPCONN)
 int
 TRANS(WSAStartup) (void)
 {
@@ -478,7 +478,7 @@ trans_mkdir(const char *path, int mode)
 	}
 	/* Dir doesn't exist. Try to create it */
 
-#if !defined(WIN32) && !defined(__CYGWIN__)
+#if !(defined(WIN32) || defined(_WIN32)) && !defined(__CYGWIN__)
 	/*
 	 * 'sticky' bit requested: assume application makes
 	 * certain security implications. If effective user ID
@@ -499,7 +499,7 @@ trans_mkdir(const char *path, int mode)
 	}
 #endif
 
-#ifndef WIN32
+#if !(defined(WIN32) || defined(_WIN32))
 	if (mkdir(path, mode) == 0) {
 	    if (chmod(path, mode)) {
 		prmsg(1, "mkdir: ERROR: Mode of %s should be set to %04o\n",
